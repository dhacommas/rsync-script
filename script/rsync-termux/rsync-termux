#!/data/data/com.termux/files/home/local/bin/bash
#!/data/data/com.termux/files/usr/bin/bash

# A shell script to backup android internal storage data to external drive using termux.
#
# v1.1
# dhacommas

export PATH=$PATH:/data/data/com.termux/files/home/local/bin:/sdcard

: '
# rsync options source destination

    -v : verbose
    -r : copies data recursively (but donâ€™t preserve timestamps and permission while transferring data.
    -a : archive mode, which allows copying files recursively and it also preserves symbolic links, file permissions, user & group ownerships, and timestamps.
    -z : compress file data.
    -h : human-readable, output numbers in a human-readable format.
    --progress : Shows Progress
    --delete : to delete files from destination that are not in the source directory.
    --exclude-from 'rsync_excludes.txt'
    --delete-excluded : delete excluded files from destination
    --remove-source-files : Automatically Delete source Files After Successful Transfer.
    --dry-run : simulate
'

# ---------------------------------------------------

# make sure we are in sdcard directory
cd /sdcard

# config directory in sdcard path (MODIFY AS PER NEED)
configDIR=config/rsync

if [[ -d $configDIR ]]; then
    echo "config directory exists"
else
    mkdir -pv config/rsync
fi

##(MODIFY AS PER NEED)##

#External Drive
ExtDrive=/storage/863D-B702

# Destination Directory
DESTINATIONDIR=$ExtDrive/rsync/storage

# excludes file - this contains a wildcard pattern per line of files to be excluded
EXCLUDES=$configDIR/rsync_excludes.txt

# BackupDir.txt file - this contains per line of directories to be backed up
BackupDirFile=$configDIR/BackupDir.txt

# Checks
if [[ ! -d $ExtDrive ]]; then
  echo "ERROR: External Drive is missing"
  exit 1
else
  echo "External Drive found."

if [[ -d $DESTINATIONDIR ]]; then
  echo "Backup destination found."
else
  echo "Backup destination is missing"
  echo "Creating Backup destination directory"
  mkdir -pv $DESTINATIONDIR
fi

if [[ ! -d $DESTINATIONDIR ]]; then
  echo "ERROR: Backup destination directory is missing"
  exit 1
else
  echo "Backup destination directory found"
fi

if [[ ! -s $EXCLUDES ]]; then
  echo "ERROR: rsync_excludes.txt is missing."
  exit 1
else
  echo "rsync_excludes.txt found." 
fi

elif [[ ! -s $BackupDirFile ]]; then
  echo "ERROR: BackupDir.txt is missing."
  exit 1
else
  echo "BackupDir.txt found." 
fi

echo "Beginning backup..."

# Argument
OPT="-avh --progress --delete --delete-excluded --exclude-from=$EXCLUDES"


while IFS= read -r file; do
  rsync $OPT "$file" $DESTINATIONDIR
done < "$BackupDirFile"

#------------------------------------------------------------------------------------------------

# Directory to be backed up (source)
#SOURCEDIR="$sdcard/Music $sdcard/DCIM $sdcard/Documents"

# rsync $OPT $SOURCEDIR $DESTINATIONDIR

: '
    for d in $SOURCEDIR; do
	rsync $OPT $d/ $DESTINATIONDIR/$d/
    done
'

: '
while IFS= read -r file; do
  echo "Do something on $file ..."
done < "filenames.txt"
'
