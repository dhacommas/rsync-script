#!/bin/bash

# A shell script to backup android internal storage data to external drive.
#
#   uses "Android File Transfer For Linux" (https://whoozle.github.io/android-file-transfer-linux/) to mount Android internal storage as
#   mtp. make sure to configure it first.
#
# rsync-android
# v1.1
# dhacommas

export PATH=$PATH:/bin:/usr/bin:/usr/local/bin:${HOME}/.local/bin

: '
# rsync options source destination

    -v : verbose
    -r : copies data recursively (but donâ€™t preserve timestamps and permission while transferring data.
    -a : archive mode, which allows copying files recursively and it also preserves symbolic links, file permissions, user & group ownerships, and timestamps.
    -z : compress file data.
    -h : human-readable, output numbers in a human-readable format.
    --progress : Shows Progress
    --delete : to delete files from destination that are not in the source directory.
    --exclude-from 'rsync_excludes.txt'
    --delete-excluded : delete excluded files from destination
    --remove-source-files : Automatically Delete source Files After Successful Transfer.
    --dry-run : simulate
'

# ---------------------------------------------------

# mtp directory (MODIFY AS PER NEED)
mtpDIR=~/mnt/sdcard
mountCheck=$mtpDIR/Internal" shared storage"

if [[ -d $mtpDIR ]]; then
    echo "mtp directory exists. Continuing..."
else
    mkdir -pv $mtpDIR
fi

#check if device is already mounted or not; if not, mount.
if [[ -d $mountCheck ]]; then
    echo "Device is already mounted. Continuing..."
else
    aft-mtp-mount $mtpDIR
fi

# check if device is successfully mounted or not

if [[ ! -d $mountCheck ]]; then
    echo "Device is failed to mount. Exiting for your own good..."
    exit 1
else
    echo "Device is successfully mounted. Beginning..."
    cd $mtpDIR/Internal" shared storage"
fi

##(MODIFY AS PER NEED)##

#External Drive
ExtDrive=/media/dhacommas/BoxIt/rsync

# Destination Directory
DESTINATIONDIR=$ExtDrive/storage

# excludes file - this contains a wildcard pattern per line of files to be excluded
EXCLUDES=$ExtDrive/rsync_excludes.txt

# BackupDir.txt file - this contains per line of directories to be backed up
BackupDirFile=$ExtDrive/BackupDir.txt

if [[ -d $DESTINATIONDIR ]]; then
    echo "Destination directory exists."
else
    mkdir -pv $DESTINATIONDIR
fi

# Checks
if [[ ! -d $DESTINATIONDIR ]]; then
  echo "ERROR: Backup destination is missing"
  exit 1
else
  echo "Backup destination found."
fi

if [[ ! -s $EXCLUDES ]]; then
  echo "ERROR: rsync_excludes.txt is missing."
  exit 1
else
  echo "rsync_excludes.txt found." 
fi

if [[ ! -s $BackupDirFile ]]; then
  echo "ERROR: BackupDir.txt is missing."
  exit 1
else
  echo "BackupDir.txt found." 
fi

# Argument
OPT="-avh --progress --delete --delete-excluded --exclude-from=$EXCLUDES"

echo Initiating Backup...

while IFS= read -r file; do
  rsync $OPT "$file" $DESTINATIONDIR
done < "$BackupDirFile"

#------------------------------------------------------------------------------------------------

# rsync $OPT $SOURCEDIR $DESTINATIONDIR

: '
# Directory to be backed up (source)
#SOURCEDIR="$sdcard/Music $sdcard/DCIM $sdcard/Documents"


    for d in $SOURCEDIR; do
	rsync $OPT $d/ $DESTINATIONDIR/$d/
    done
'

: '
while IFS= read -r file; do
  echo "Do something on $file ..."
done < "filenames.txt"
'
